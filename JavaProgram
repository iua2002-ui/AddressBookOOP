import java.util.ArrayList;
import java.util.Scanner;

class Contact {
    private static int count = 0;
    private int id;
    private String name;
    private String email;
    private String phone;
    private String notes;

    public Contact(String name, String email, String phone, String notes) {
        this.id = ++count;
        this.name = name;
        this.email = email;
        this.phone = phone;
        this.notes = notes;
    }

    public int getId() {
        return id;
    }

    public String getName() {
        return name;
    }

    public String getEmail() {
        return email;
    }

    public String getPhone() {
        return phone;
    }

    public String getNotes() {
        return notes;
    }

    public static int getCount() {
        return count;
    }

    public static void resetCount() {
        count = 0;
    }

    public static void setCount(int count) {
        Contact.count = count;
    }
}
public class AddressBook {
    private static ArrayList<Contact> contacts = new ArrayList<>();
    private static Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) {
        int choice;
        do {
            System.out.println("Main Window:");
            System.out.println("================");
            System.out.println("(1) Add a new contact");
            System.out.println("(2) Search for contact");
            System.out.println("(3) Display all contacts");
            System.out.println("(4) Quit");
            System.out.print("Enter your choice: ");
            choice = scanner.nextInt();
            scanner.nextLine(); // Consume newline

            switch (choice) {
                case 1:
                    addContact();
                    break;
                case 2:
                    searchContact();
                    break;
                case 3:
                    displayAllContacts();
                    break;
                case 4:
                    System.out.println("Exiting program...");
                    break;
                default:
                    System.out.println("Invalid choice. Please try again.");
            }
        } while (choice != 4);
    }

    private static void addContact() {
        System.out.println("Add a new contact:(Enter the following information)");
        System.out.print("Name: ");
        String name = scanner.nextLine();
        System.out.print("Email: ");
        String email = scanner.nextLine();
        System.out.print("Phone: ");
        String phone = scanner.nextLine();
        System.out.print("Notes: ");
        String notes = scanner.nextLine();

        Contact contact = new Contact(name, email, phone, notes);
        contacts.add(contact);

        System.out.println("Saved Successfully...Press enter to go back to the Main Menu.");
        waitForEnter();
    }

    private static void searchContact() {
        System.out.println("Search for contact window: (Choose one of the following options)");
        System.out.println("(1) Search by name");
        System.out.println("(2) Search by email");
        System.out.println("(3) Search by phone number");
        System.out.print("Enter your choice: ");
        int choice = scanner.nextInt();
        scanner.nextLine(); // Consume newline

        switch (choice) {
            case 1:
                searchByName();
                break;
            case 2:
                searchByEmail();
                break;
            case 3:
                searchByPhone();
                break;
            default:
                System.out.println("Invalid choice. Please try again.");
        }
    }

    private static void searchByName() {
        System.out.print("Enter name to search: ");
        String name = scanner.nextLine();
        ArrayList<Contact> results = new ArrayList<>();
        for (Contact contact : contacts) {
            if (contact.getName().equalsIgnoreCase(name)) {
                results.add(contact);
            }
        }
        displaySearchResults(results);
    }

    private static void searchByEmail() {
        System.out.print("Enter email address to search: ");
        String email = scanner.nextLine();
        ArrayList<Contact> results = new ArrayList<>();
        for (Contact contact : contacts) {
            if (contact.getEmail().equalsIgnoreCase(email)) {
                results.add(contact);
            }
        }
        displaySearchResults(results);
    }

    private static void searchByPhone() {
        System.out.print("Enter phone number to search: ");
        String phone = scanner.nextLine();
        ArrayList<Contact> results = new ArrayList<>();
        for (Contact contact : contacts) {
            if (contact.getPhone().equals(phone)) {
                results.add(contact);
            }
        }
        displaySearchResults(results);
    }

    private static void displaySearchResults(ArrayList<Contact> results) {
        if (results.isEmpty()) {
            System.out.println("No matching contacts found.");
        } else {
            System.out.println("Search results:");
            System.out.println("------------------------------");
            for (Contact contact : results) {
                System.out.println("ID: " + contact.getId());
                System.out.println("Name: " + contact.getName());
                System.out.println("Email: " + contact.getEmail());
                System.out.println("Phone: " + contact.getPhone());
                System.out.println("Notes: " + contact.getNotes());
                System.out.println();
            }

            System.out.println("Choose one of these ptions:");
            System.out.println("(1) Delete a contact");
            System.out.println("(2) Back to main Window");
            System.out.print("Enter your choice: ");
            int choice = scanner.nextInt();
            scanner.nextLine(); // Consume newline
            switch (choice) {
                case 1:
                    deleteContact(results);
                    break;
                case 2:
                    break;
                default:
                    System.out.println("Invalid choice. Returning to main menu.");
            }
        }
        waitForEnter();
    }

    private static void deleteContact(ArrayList<Contact> results) {
        System.out.print("Enter ID of contact to delete: ");
        int id = scanner.nextInt();
        scanner.nextLine(); // Consume newline
        for (Contact contact : results) {
            if (contact.getId() == id) {
                contacts.remove(contact);
                System.out.println("Contact deleted successfully.");
                return;
            }
        }
        System.out.println("Contact not found.");
    }

    private static void displayAllContacts() {
        if (contacts.isEmpty()) {
            System.out.println("No contacts found.");
        } else {
            System.out.println("All contacts:");
            for (Contact contact : contacts) {
                System.out.println("ID: " + contact.getId());
                System.out.println("Name: " + contact.getName());
                System.out.println("Email: " + contact.getEmail());
                System.out.println("Phone: " + contact.getPhone());
                System.out.println("Notes: " + contact.getNotes());
                System.out.println();
            }
        }
        waitForEnter();
    }

    private static void waitForEnter() {
        System.out.print("Press Enter to continue...");
        scanner.nextLine();
    }
}
